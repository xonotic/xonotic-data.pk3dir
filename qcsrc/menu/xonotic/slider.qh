#pragma once

#include "../item/slider.qh"
CLASS(XonoticSlider, Slider)
	METHOD(XonoticSlider, configureXonoticSlider, void(entity, float, float, float, string, string));
	METHOD(XonoticSlider, setValue, void(entity, float));
	METHOD(XonoticSlider, setValue_noAnim, void(entity, float));
	ATTRIB(XonoticSlider, onChange, void(entity, entity));
	ATTRIB(XonoticSlider, onChangeEntity, entity);
	ATTRIB(XonoticSlider, fontSize, float, SKINFONTSIZE_NORMAL);
	ATTRIB(XonoticSlider, valueSpace, float, SKINWIDTH_SLIDERTEXT);
	ATTRIB(XonoticSlider, image, string, SKINGFX_SLIDER);
	ATTRIB(XonoticSlider, tolerance, vector, '0.2 2 0');
	ATTRIB(XonoticSlider, align, float, 0.5);
	ATTRIB(XonoticSlider, color, vector, SKINCOLOR_SLIDER_N);
	ATTRIB(XonoticSlider, colorC, vector, SKINCOLOR_SLIDER_C);
	ATTRIB(XonoticSlider, colorF, vector, SKINCOLOR_SLIDER_F);
	ATTRIB(XonoticSlider, colorD, vector, SKINCOLOR_SLIDER_D);
	ATTRIB(XonoticSlider, color2, vector, SKINCOLOR_SLIDER_S);

	ATTRIB(XonoticSlider, controlledCvar, string);
	METHOD(XonoticSlider, loadCvars, void(entity));
	METHOD(XonoticSlider, saveCvars, void(entity));
	ATTRIB(XonoticSlider, sendCvars, float, 0);

	ATTRIB(XonoticSlider, alpha, float, SKINALPHA_TEXT);
	ATTRIB(XonoticSlider, disabledAlpha, float, SKINALPHA_DISABLED);
ENDCLASS(XonoticSlider)
entity makeXonoticSlider_T(float, float, float, string, string theTooltip);
entity makeXonoticSlider(float, float, float, string);
