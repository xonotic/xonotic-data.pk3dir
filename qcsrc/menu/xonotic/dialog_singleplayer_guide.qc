#include "dialog_singleplayer_guide.qh"

#include "button.qh"
#include "inputbox.qh"
#include "textlabel.qh"
#include <menu/xonotic/guide/entries.qh>

void XonoticGuideDialog_fill(entity me)
{
	entity e;

	float col = 0;
	float width = 1.5;
	me.gotoRC(me, 0, col);
		me.TD(me, 1, width, makeXonoticHeaderLabel(_("Topic")));
	me.TR(me);
		me.TD(me, me.rows - 2, width, e = me.topicList);
			e.onChange = XonoticGuideDialog_topicChangeNotify;
			e.onChangeEntity = me;

	col += width;
	width = 1.75;
	me.gotoRC(me, 0, col); me.setFirstColumn(me, me.currentColumn);
		me.TD(me, 1, width, makeXonoticHeaderLabel(_("Entry")));
	me.TR(me);
		me.TD(me, me.rows - 3, width, e = me.entryList);
			e.onChange = XonoticGuideDialog_entryChangeNotify;
			e.onChangeEntity = me;
	me.gotoRC(me, me.rows - 2, col);
		me.entryList.stringFilterBox = makeXonoticInputBox_T(false, string_null,
			_("Click here or Ctrl-F to provide a keyword to narrow down the map list. Ctrl-Delete to clear; Enter when done."));
		me.TD(me, 1, 0.3, makeXonoticTextLabel(0, _("Filter:")));
		me.TD(me, 1, width - 0.3, e = me.entryList.stringFilterBox);
			e.onChange = EntryList_StringFilterBox_Change;
			e.keyDown = EntryList_StringFilterBox_keyDown;
			e.onChangeEntity = me.entryList;

	col += width;
	width = 2.75;
	me.gotoRC(me, 0, col); me.setFirstColumn(me, me.currentColumn);
		me.TD(me, 1, width, makeXonoticHeaderLabel(_("Description")));
	me.TR(me);
		me.TD(me, me.rows - 2, width, me.descriptionPane);

	me.gotoRC(me, me.rows - 1, 0);
		me.TD(me, 1, me.columns, e = makeXonoticButton(_("OK"), '0 0 0'));
			e.onClick = Dialog_Close;
			e.onClickEntity = me;

	me.topicChangeNotify(me.topicList, me);
}

void XonoticGuideDialog_topicChangeNotify(entity, entity me)
{
	entity entries = me.entryList;
	const int i = me.topicList.selectedItem;
	int idx = 0;
	entity found = NULL;
	#define TOPIC(src, name, icon) \
		if (idx++ == i) \
		{ \
			static entity e; \
			if (!e) \
				e = src; \
			found = e; \
			break; \
		}
	do { TOPICS(TOPIC); }
	while (0);
	#undef TOPIC
	entries.source = found;
	entries.selectedItem = -1; // signal that the source has changed
	entries.stringFilterBox.setText(entries.stringFilterBox, "");
	EntryList_StringFilterBox_Change(entries.stringFilterBox, entries); // this calls entries.refilter, which calls entries.setSelected, which calls entryChangeNotify
}
void XonoticGuideDialog_entryChangeNotify(entity, entity me)
{
	entity entries = me.entryList;
	if (entries.nItems <= 0)
		return;
	entity e = entries.source.getEntry(entries.source, entries.selectedItem, func_null);
	string s = e.describe(e);
	if (gamestatus & GAME_DEVELOPER)
		s = sprintf("entity %i\n\n%s", e, s);
	me.descriptionPane.setDescription(me.descriptionPane, s);
}
