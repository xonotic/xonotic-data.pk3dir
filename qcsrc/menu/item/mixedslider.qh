#pragma once

// Note:
//   this is a numeric slider allowing replacement of some numbers with text, hence a "mixed" slider
//   that's why addNumberText takes a string (the text) and a float (the corresponding number)
//   to use this, you FIRST call configureSliderVisuals, then multiple times addNumberRange and/or addNumberText, then configureMixedSlider
#include "slider.qh"
CLASS(MixedSlider, Slider)
	METHOD(MixedSlider, valueToText, string(entity, int));
	METHOD(MixedSlider, valueToNumberIdentifier, float(entity, int));
	METHOD(MixedSlider, setValueFromNumberIdentifier_allowAnim, void(entity, float, bool));
	METHOD(MixedSlider, setValueFromNumberIdentifier_noAnim, void(entity, float));
	METHOD(MixedSlider, setValueFromNumberIdentifier, void(entity, float));
	METHOD(MixedSlider, getNumberIdentifier, float(entity));
	METHOD(MixedSlider, rangedIdentifierToText, string(entity, float));
	METHOD(MixedSlider, adjustDigitsForStep, void(entity, float));
	METHOD(MixedSlider, clearValues, void(entity));
	METHOD(MixedSlider, addNumberRange, void(entity, float, float, float));
	METHOD(MixedSlider, addNumberText, void(entity, string, float));
	METHOD(MixedSlider, insertNumberRange, void(entity, int, float, float, float));
	METHOD(MixedSlider, insertNumberText, void(entity, int, string, float));
	METHOD(MixedSlider, configureMixedSliderValues, void(entity, float));
	ATTRIBARRAY(MixedSlider, valueStrings, string, 256);
	ATTRIBARRAY(MixedSlider, valueNumberIdentifiers, float, 256);
	/* `value` ranges from 0 to nValues - 1,
	 * for each `value` there is a `valueNumberIdentifiers` and `valueStrings` entry,
	 * representing the value to set the cvar, and what to display, respectively
	 */
	ATTRIB(MixedSlider, nValues, int, 0);
ENDCLASS(MixedSlider)
