#ifndef MOVETYPES_H
#define MOVETYPES_H

.float move_movetype;
.float move_time;
.vector move_origin;
.vector move_angles;
.vector move_velocity;
.vector move_avelocity;
.int move_flags;
.int move_watertype;
.int move_waterlevel;
.void(void) move_touch;
.void(float, float) contentstransition;
.float move_bounce_factor;
.float move_bounce_stopspeed;
.float move_nomonsters; // -1 for MOVE_NORMAL, otherwise a MOVE_ constant

// should match sv_gameplayfix_fixedcheckwatertransition
float autocvar_cl_gameplayfix_fixedcheckwatertransition = 1;

void Movetype_Physics_MatchTicrate(float tr, bool sloppy);
void Movetype_Physics_MatchServer(bool sloppy);
void Movetype_Physics_NoMatchServer();

const int MOVETYPE_NONE				= 0;
const int MOVETYPE_ANGLENOCLIP	    = 1;
const int MOVETYPE_ANGLECLIP	    = 2;
const int MOVETYPE_WALK				= 3;
const int MOVETYPE_STEP				= 4;
const int MOVETYPE_FLY				= 5;
const int MOVETYPE_TOSS				= 6;
const int MOVETYPE_PUSH				= 7;
const int MOVETYPE_NOCLIP		    = 8;
const int MOVETYPE_FLYMISSILE	    = 9;
const int MOVETYPE_BOUNCE		    = 10;
const int MOVETYPE_BOUNCEMISSILE	= 11;	// Like bounce but doesn't lose speed on bouncing
const int MOVETYPE_FOLLOW           = 12;
const int MOVETYPE_FAKEPUSH         = 13;
const int MOVETYPE_FLY_WORLDONLY    = 33;

const int FL_ITEM                   = BIT(8);
const int FL_ONGROUND				= BIT(9);
#endif
