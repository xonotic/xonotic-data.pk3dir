#pragma once

#include <common/colors.qh>

CLASS(Tuba, Weapon)
/* spawnfunc */ ATTRIB(Tuba, m_canonical_spawnfunc, string, "weapon_tuba");
/* impulse   */ ATTRIB(Tuba, impulse, int, 1);
/* flags     */ ATTRIB(Tuba, spawnflags, int, WEP_FLAG_HIDDEN | WEP_TYPE_SPLASH | WEP_FLAG_NODUAL | WEP_FLAG_NOTRUEAIM);
/* rating    */ ATTRIB(Tuba, bot_pickupbasevalue, float, 2000);
/* color     */ ATTRIB(Tuba, m_color, vector, COLOR_WEP_TUBA);
/* modelname */ ATTRIB(Tuba, mdl, string, "tuba");
#ifdef GAMEQC
/* model     */ ATTRIB(Tuba, m_model, Model, MDL_TUBA_ITEM);
#endif
/* crosshair */ ATTRIB(Tuba, w_crosshair, string, "gfx/crosshairtuba");
/* crosshair */ //ATTRIB(Tuba, w_crosshair_size, float, 0.65);
/* wepimg    */ ATTRIB(Tuba, model2, string, "weapontuba");
/* refname   */ ATTRIB(Tuba, netname, string, "tuba");
/* xgettext:no-c-format */
/* wepname   */ ATTRIB(Tuba, m_name, string, _("@!#%'n Tuba"));

#define X(BEGIN, P, END, class, prefix) \
	BEGIN(class) \
		P(class, prefix, animtime, float, NONE) \
		P(class, prefix, attenuation, float, NONE) \
		P(class, prefix, damage, float, NONE) \
		P(class, prefix, edgedamage, float, NONE) \
		P(class, prefix, fadetime, float, NONE) \
		P(class, prefix, force, float, NONE) \
		P(class, prefix, pitchstep, float, NONE) \
		P(class, prefix, radius, float, NONE) \
		P(class, prefix, refire, float, NONE) \
		P(class, prefix, switchdelay_drop, float, NONE) \
		P(class, prefix, switchdelay_raise, float, NONE) \
		P(class, prefix, volume, float, NONE) \
		P(class, prefix, weaponreplace, string, NONE) \
		P(class, prefix, weaponstartoverride, float, NONE) \
		P(class, prefix, weaponstart, float, NONE) \
		P(class, prefix, weaponthrowable, float, NONE) \
	END()
	W_PROPS(X, Tuba, tuba)
#undef X
#ifdef MENUQC
METHOD(Tuba, describe, string(Tuba this))
{
	TC(Tuba, this);
	return sprintf(_("The %s is unique weapon that makes the ears of nearby enemies bleed by playing awful sounds, also slightly knocking them back\n\n"
		"The secondary fire works the same way, playing a higher pitch\n\n"
		"The only ammo it needs to operate is the breath from your lungs\n\n"
		"Since your enemies need to be close by to hear your awful music, the %s is only effective at very close ranges\n\n"
		"The pitch the %s plays depends on the movement keys pressed. "
		"Reloading the weapon switches its model and notes played"),
	COLORED_NAME(Tuba), COLORED_NAME(Tuba), COLORED_NAME(Tuba));
}
#endif
ENDCLASS(Tuba)
REGISTER_WEAPON(TUBA, NEW(Tuba));

SPAWNFUNC_WEAPON(weapon_tuba, WEP_TUBA)

#ifdef CSQC
entityclass(Tuba);
classfield(Tuba) .int note;
classfield(Tuba) .bool tuba_attenuate;
classfield(Tuba) .float tuba_volume;
classfield(Tuba) .float tuba_volume_initial;
classfield(Tuba) .int tuba_instrument;
#endif

#ifdef SVQC
float autocvar_snd_soundradius;

bool W_Tuba_HasPlayed(entity pl, .entity weaponentity, string melody, int instrument, bool ignorepitch, float mintempo, float maxtempo);
#endif
