#pragma once

#include <common/colors.qh>
#ifdef MENUQC
	#include "blaster.qh"
#endif

CLASS(HLAC, Weapon)
/* spawnfunc */ ATTRIB(HLAC, m_canonical_spawnfunc, string, "weapon_hlac");
/* ammotype  */ ATTRIB(HLAC, ammo_type, Resource, RES_CELLS);
/* impulse   */ ATTRIB(HLAC, impulse, int, 6);
/* flags     */ ATTRIB(HLAC, spawnflags, int, WEP_FLAG_MUTATORBLOCKED | WEP_FLAG_RELOADABLE | WEP_TYPE_SPLASH);
/* rating    */ ATTRIB(HLAC, bot_pickupbasevalue, float, 4000);
/* color     */ ATTRIB(HLAC, m_color, vector, COLOR_WEP_HLAC);
/* modelname */ ATTRIB(HLAC, mdl, string, "hlac");
#ifdef GAMEQC
/* model     */ ATTRIB(HLAC, m_model, Model, MDL_HLAC_ITEM);
/* flash mdl */ ATTRIB(HLAC, m_muzzlemodel, Model, MDL_Null);
/* flash eff */ ATTRIB(HLAC, m_muzzleeffect, entity, EFFECT_BLASTER_MUZZLEFLASH);
#endif
/* crosshair */ ATTRIB(HLAC, w_crosshair, string, "gfx/crosshairhlac");
/* crosshair */ ATTRIB(HLAC, w_crosshair_size, float, 0.6);
/* wepimg    */ ATTRIB(HLAC, model2, string, "weaponhlac");
/* refname   */ ATTRIB(HLAC, netname, string, "hlac");
/* wepname   */ ATTRIB(HLAC, m_name, string, _("Heavy Laser Assault Cannon"));

#define X(BEGIN, P, END, class, prefix) \
	BEGIN(class) \
		P(class, prefix, ammo, float, BOTH) \
		P(class, prefix, animtime, float, BOTH) \
		P(class, prefix, damage, float, BOTH) \
		P(class, prefix, edgedamage, float, BOTH) \
		P(class, prefix, force, float, BOTH) \
		P(class, prefix, lifetime, float, BOTH) \
		P(class, prefix, radius, float, BOTH) \
		P(class, prefix, refire, float, BOTH) \
		P(class, prefix, reload_ammo, float, NONE) \
		P(class, prefix, reload_time, float, NONE) \
		P(class, prefix, secondary, float, NONE) \
		P(class, prefix, shots, float, SEC) \
		P(class, prefix, speed, float, BOTH) \
		P(class, prefix, spread, float, SEC) \
		P(class, prefix, spread_add, float, PRI) \
		P(class, prefix, spread_crouchmod, float, BOTH) \
		P(class, prefix, spread_max, float, PRI) \
		P(class, prefix, spread_min, float, PRI) \
		P(class, prefix, switchdelay_drop, float, NONE) \
		P(class, prefix, switchdelay_raise, float, NONE) \
		P(class, prefix, weaponreplace, string,NONE) \
		P(class, prefix, weaponstartoverride, float, NONE) \
		P(class, prefix, weaponstart, float, NONE) \
		P(class, prefix, weaponthrowable, float, NONE) \
	END()
	W_PROPS(X, HLAC, hlac)
#undef X
#ifdef MENUQC
METHOD(HLAC, describe, string(HLAC this))
{
	TC(HLAC, this);
	return sprintf(_("The %s (or HLAC for short) fires lasers in quick succession. "
		"The projectiles it fires are similar to those of the %s\n\n"
		"The secondary fire shoots a randomly scattered burst of multiple lasers at once\n\n"
		"Unlike the %s, it consumes %s ammo for each laser shot, meaning that it cannot be used infinitely\n\n"
		"The %s works best in close ranges, but the primary fire is also useful in medium ranges\n\n"
		"A unique aspect of the %s is that the longer the primary fire is held, the more that the lasers will start to spread out. "
		"This means releasing primary fire every now and then is important to restore accuracy. "
		"Also, the %s has less spread when used while crouching"),
	COLORED_NAME(HLAC), COLORED_NAME(Blaster), COLORED_NAME(Blaster), COLORED_NAME(Cells), COLORED_NAME(HLAC), COLORED_NAME(HLAC), COLORED_NAME(HLAC));
}
#endif
ENDCLASS(HLAC)
REGISTER_WEAPON(HLAC, NEW(HLAC));

SPAWNFUNC_WEAPON(weapon_hlac, WEP_HLAC)
