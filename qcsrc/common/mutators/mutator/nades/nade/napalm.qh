#pragma once

#include <common/mutators/mutator/nades/nades.qh>

#ifdef SVQC
bool autocvar_g_nades_napalm;
int autocvar_g_nades_napalm_ball_count;
float autocvar_g_nades_napalm_ball_spread;
float autocvar_g_nades_napalm_ball_damage;
float autocvar_g_nades_napalm_ball_damageforcescale;
float autocvar_g_nades_napalm_ball_lifetime;
float autocvar_g_nades_napalm_ball_radius;
bool autocvar_g_nades_napalm_blast;
float autocvar_g_nades_napalm_fountain_lifetime;
float autocvar_g_nades_napalm_fountain_delay;
float autocvar_g_nades_napalm_fountain_radius;
float autocvar_g_nades_napalm_fountain_damage;
float autocvar_g_nades_napalm_fountain_edgedamage;
float autocvar_g_nades_napalm_burntime;
bool autocvar_g_nades_napalm_selfdamage;

void nade_napalm_boom(entity this);
#endif // SVQC

const int PROJECTILE_NADE_NAPALM = 73;
const int PROJECTILE_NADE_NAPALM_BURN = 74;
const int PROJECTILE_NAPALM_FOUNTAIN = 75;

CLASS(NapalmNade, Nade)
	ATTRIB(NapalmNade, m_color, vector, '2 0.5 0');
	ATTRIB(NapalmNade, m_name, string, _("Napalm grenade"));
	ATTRIB(NapalmNade, m_icon, string, "nade_napalm");
ENDCLASS(NapalmNade)
