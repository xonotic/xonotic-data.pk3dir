#pragma once

#include <common/weapons/all.qh>

CLASS(OverkillRocketPropelledChainsaw, Weapon)
/* spawnfunc */ ATTRIB(OverkillRocketPropelledChainsaw, m_canonical_spawnfunc, string, "weapon_okrpc");
/* ammotype  */ ATTRIB(OverkillRocketPropelledChainsaw, ammo_type, int, RES_ROCKETS);
/* impulse   */ ATTRIB(OverkillRocketPropelledChainsaw, impulse, int, 9);
/* flags     */ ATTRIB(OverkillRocketPropelledChainsaw, spawnflags, int, WEP_FLAG_MUTATORBLOCKED | WEP_FLAG_HIDDEN | WEP_FLAG_CANCLIMB | WEP_FLAG_RELOADABLE | WEP_TYPE_SPLASH | WEP_FLAG_SUPERWEAPON);
/* rating    */ ATTRIB(OverkillRocketPropelledChainsaw, bot_pickupbasevalue, float, 10000);
/* color     */ ATTRIB(OverkillRocketPropelledChainsaw, wpcolor, vector, '0.5 0.5 0');
/* modelname */ ATTRIB(OverkillRocketPropelledChainsaw, mdl, string, "ok_rl");
#ifdef GAMEQC
/* model     */ ATTRIB(OverkillRocketPropelledChainsaw, m_model, Model, MDL_RPC_ITEM);
/* flash mdl */ ATTRIB(OverkillRocketPropelledChainsaw, m_muzzlemodel, Model, MDL_RPC_MUZZLEFLASH);
/* flash eff */ ATTRIB(OverkillRocketPropelledChainsaw, m_muzzleeffect, entity, EFFECT_ROCKET_MUZZLEFLASH);
#endif
/* crosshair */ ATTRIB(OverkillRocketPropelledChainsaw, w_crosshair, string, "gfx/crosshairrocketlauncher");
/* crosshair */ ATTRIB(OverkillRocketPropelledChainsaw, w_crosshair_size, float, 0.6);
/* wepimg    */ ATTRIB(OverkillRocketPropelledChainsaw, model2, string, "weaponrpc");
/* refname   */ ATTRIB(OverkillRocketPropelledChainsaw, netname, string, "okrpc");
/* wepname   */ ATTRIB(OverkillRocketPropelledChainsaw, m_name, string, _("Overkill Rocket Propelled Chainsaw"));

#define X(BEGIN, P, END, class, prefix) \
	BEGIN(class) \
		P(class, prefix, ammo, float, PRI) \
		P(class, prefix, animtime, float, PRI) \
		P(class, prefix, damage, float, PRI) \
		P(class, prefix, damage2, float, PRI) \
		P(class, prefix, damageforcescale, float, PRI) \
		P(class, prefix, edgedamage, float, PRI) \
		P(class, prefix, force, float, PRI) \
		P(class, prefix, health, float, PRI) \
		P(class, prefix, lifetime, float, PRI) \
		P(class, prefix, radius, float, PRI) \
		P(class, prefix, refire, float, PRI) \
		P(class, prefix, speedaccel, float, PRI) \
		P(class, prefix, speed, float, PRI) \
		P(class, prefix, ammo, float, SEC) \
		P(class, prefix, animtime, float, SEC) \
		P(class, prefix, damage, float, SEC) \
		P(class, prefix, delay, float, SEC) \
		P(class, prefix, edgedamage, float, SEC) \
		P(class, prefix, force, float, SEC) \
		P(class, prefix, force_zscale, float, SEC) \
		P(class, prefix, lifetime, float, SEC) \
		P(class, prefix, radius, float, SEC) \
		P(class, prefix, refire, float, SEC) \
		P(class, prefix, refire_type, float, SEC) \
		P(class, prefix, shotangle, float, SEC) \
		P(class, prefix, speed, float, SEC) \
		P(class, prefix, spread, float, SEC) \
		P(class, prefix, reload_ammo, float, NONE) \
        P(class, prefix, reload_time, float, NONE) \
        P(class, prefix, switchdelay_drop, float, NONE) \
        P(class, prefix, switchdelay_raise, float, NONE) \
        P(class, prefix, weaponreplace, string, NONE) \
        P(class, prefix, weaponstartoverride, float, NONE) \
        P(class, prefix, weaponstart, float, NONE) \
        P(class, prefix, weaponthrowable, float, NONE) \
    END()
    W_PROPS(X, OverkillRocketPropelledChainsaw, okrpc)
#undef X

ENDCLASS(OverkillRocketPropelledChainsaw)
REGISTER_WEAPON(OVERKILL_RPC, okrpc, NEW(OverkillRocketPropelledChainsaw));

//SPAWNFUNC_WEAPON(weapon_okrpc, WEP_OVERKILL_RPC)
//SPAWNFUNC_WEAPON(weapon_rpc, WEP_OVERKILL_RPC)
