#pragma once

#include "raptor_weapons.qh"

CLASS(Raptor, Vehicle)
/* spawnflags */ ATTRIB(Raptor, spawnflags, int, VHF_DMGSHAKE | VHF_DMGROLL);
/* mins       */ ATTRIB(Raptor, m_mins, vector, '-80 -80 0');
/* maxs       */ ATTRIB(Raptor, m_maxs, vector, '80 80 70');
/* view offset*/ ATTRIB(Raptor, view_ofs, vector, '0 0 160');
/* view dist  */ ATTRIB(Raptor, height, float, 200);
#ifdef GAMEQC
/* model	  */ ATTRIB(Raptor, mdl, string, "models/vehicles/raptor.dpm");
/* model	  */ ATTRIB(Raptor, model, string, "models/vehicles/raptor.dpm");
/* head_model */ ATTRIB(Raptor, head_model, string, "");
/* hud_model  */ ATTRIB(Raptor, hud_model, string, "models/vehicles/raptor_cockpit.dpm");
/* tags       */ ATTRIB(Raptor, tag_head, string, "");
/* tags       */ ATTRIB(Raptor, tag_hud, string, "tag_hud");
/* tags       */ ATTRIB(Raptor, tag_view, string, "tag_camera");
#endif
/* netname    */ ATTRIB(Raptor, netname, string, "raptor");
/* fullname   */ ATTRIB(Raptor, m_name, string, _("Raptor"));
/* icon       */ ATTRIB(Raptor, m_icon, string, "vehicle_raptor");
#ifdef MENUQC
METHOD(Raptor, describe, string(Raptor this))
{
	TC(Raptor, this);
	return _("The Raptor vehicle is a flying vehicle that takes only one pilot, who can also opearate two weapons\n\n"
	         "The two weapons have different reticles for them similar to the Spiderbot. "
	         "The primary weapon is laser-based, and is shot toward the white reticle. "
	         "The secondary weapon drops bombs to the ground, aiming towards the green reticle. "
	         "The white reticle always points at the head of the vehicle, while the green reticle's location is determined by the momentum of the vehicle");
}
#endif
ENDCLASS(Raptor)
REGISTER_VEHICLE(RAPTOR, NEW(Raptor));

const int RSM_FIRST = 1;
const int RSM_BOMB = 1;
const int RSM_FLARE = 2;
const int RSM_LAST = 2;
