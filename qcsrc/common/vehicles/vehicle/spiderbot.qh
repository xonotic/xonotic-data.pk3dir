#pragma once

#include "spiderbot_weapons.qh"

CLASS(Spiderbot, Vehicle)
/* spawnflags */ ATTRIB(Spiderbot, spawnflags, int, VHF_DMGSHAKE);
/* mins       */ ATTRIB(Spiderbot, m_mins, vector, '-75 -75 10');
/* maxs       */ ATTRIB(Spiderbot, m_maxs, vector, '75 75 125');
/* view offset*/ ATTRIB(Spiderbot, view_ofs, vector, '0 0 70');
/* view dist  */ ATTRIB(Spiderbot, height, float, 170);
#ifdef GAMEQC
/* model	  */ ATTRIB(Spiderbot, mdl, string, "models/vehicles/spiderbot.dpm");
/* model	  */ ATTRIB(Spiderbot, model, string, "models/vehicles/spiderbot.dpm");
/* head_model */ ATTRIB(Spiderbot, head_model, string, "models/vehicles/spiderbot_top.dpm");
/* hud_model  */ ATTRIB(Spiderbot, hud_model, string, "models/vehicles/spiderbot_cockpit.dpm");
/* tags       */ ATTRIB(Spiderbot, tag_head, string, "tag_head");
/* tags       */ ATTRIB(Spiderbot, tag_hud, string, "tag_hud");
/* tags       */ ATTRIB(Spiderbot, tag_view, string, "");
#endif
/* netname    */ ATTRIB(Spiderbot, netname, string, "spiderbot");
/* fullname   */ ATTRIB(Spiderbot, m_name, string, _("Spiderbot"));
/* icon       */ ATTRIB(Spiderbot, m_icon, string, "vehicle_spider");
#ifdef MENUQC
METHOD(Spiderbot, describe, string(Spiderbot this))
{
	TC(Spiderbot, this);
	return _("The Spiderbot vehicle walks and jumps around, and takes only one rider\n\n"
	         "It can jump from very high altitudes while protecting the rider\n\n"
	         "It has two weapons the rider can control, which have different reticles for them similar to the Raptor. "
	         "The primary weapon is a machine gun, and is shot toward the green reticle. "
	         "The secondary weapon shoots rockets towards the white reticle. "
	         "The white reticle points to the front of the vehicle, while the green reticle also points to the front, with a bit of delay when the Spiderbot rotates");
}
#endif
ENDCLASS(Spiderbot)

REGISTER_VEHICLE(SPIDERBOT, NEW(Spiderbot));
