#pragma once

#ifdef SVQC
    #include <server/items/items.qh>
#endif

#include "ammo.qh"
#include <common/colors.qh>
#include <common/mutators/mutator/powerups/_mod.qh>

#ifndef SVQC
.int m_itemid;
#endif

// jetpack powerup
#ifdef GAMEQC
MODEL(Jetpack_ITEM, Item_Model("g_jetpack.md3"));
#endif

#ifdef SVQC
bool autocvar_g_powerups_jetpack = true;
PROPERTY(int, g_pickup_fuel_jetpack);
void powerup_jetpack_init(Pickup def, entity item)
{
    if(!autocvar_g_powerups || !autocvar_g_powerups_jetpack)
        def.spawnflags |= ITEM_FLAG_MUTATORBLOCKED;

    if(!GetResource(item, RES_FUEL))
        SetResourceExplicit(item, RES_FUEL, g_pickup_fuel_jetpack);
}
#endif

CLASS(Jetpack, Powerup)
#ifdef MENUQC
    METHOD(Jetpack, describe, string(Jetpack this))
    {
        TC(Jetpack, this);
        return _("The Jetpack allows you to fly around the map for a short period, "
                 "providing increased mobility, maneuverability, and the ability to reach higher ground\n\n"
                 "It consumes Fuel ammo while operating, so make sure you don't run out when you're high up!");
    }
#endif
ENDCLASS(Jetpack)

REGISTER_ITEM(Jetpack, NEW(Jetpack)) {
    this.m_canonical_spawnfunc = "item_jetpack";
#ifdef GAMEQC
	this.spawnflags = ITEM_FLAG_NORMAL;
    this.m_model                =   MDL_Jetpack_ITEM;
    this.m_itemid               =   IT_JETPACK;
#endif
    this.netname                =   "jetpack";
    this.m_name                 =   _("Jetpack");
    this.m_icon                 =   "jetpack";
    this.m_color                =   COLOR_ITEM_JETPACK;
    this.m_waypoint             =   _("Jetpack");
    this.m_waypointblink        =   2;
#ifdef SVQC
    this.m_botvalue             =   3000;
    this.m_pickupevalfunc       =   ammo_pickupevalfunc;
    this.m_iteminit             =   powerup_jetpack_init;
#endif
}

SPAWNFUNC_ITEM(item_jetpack, ITEM_Jetpack)

// fuel ammo
#ifdef GAMEQC
MODEL(JetpackFuel_ITEM, Item_Model("g_fuel.md3"));
#endif

CLASS(JetpackFuel, Ammo)
#ifdef MENUQC
    METHOD(JetpackFuel, describe, string(JetpackFuel this))
    {
        TC(JetpackFuel, this);
        return _("The Fuel ammo type is used by the Jetpack");
    }
#endif
ENDCLASS(JetpackFuel)

#ifdef SVQC
PROPERTY(int, g_pickup_fuel);
void ammo_fuel_init(Pickup this, entity item)
{
    if(!GetResource(item, RES_FUEL))
        SetResourceExplicit(item, RES_FUEL, g_pickup_fuel);
}
#endif
REGISTER_ITEM(JetpackFuel, NEW(JetpackFuel)) {
    this.m_canonical_spawnfunc = "item_fuel";
#ifdef GAMEQC
	this.spawnflags = ITEM_FLAG_NORMAL | ITEM_FLAG_RESOURCE;
    this.m_model    =   MDL_JetpackFuel_ITEM;
#endif
    this.netname    =   "fuel";
    this.m_name     =   _("Fuel");
    this.m_icon     =   "ammo_fuel";
#ifdef SVQC
    this.m_botvalue =   2000;
    this.m_itemid   =   IT_RESOURCE;
    this.m_iteminit =   ammo_fuel_init;
#endif
}

SPAWNFUNC_ITEM(item_fuel, ITEM_JetpackFuel)

// fuel regenerator powerup
#ifdef GAMEQC
MODEL(JetpackRegen_ITEM, Item_Model("g_fuelregen.md3"));
#endif

#ifdef SVQC
bool autocvar_g_powerups_fuelregen = true;
void powerup_fuelregen_init(Pickup def, entity item)
{
    if(!autocvar_g_powerups || !autocvar_g_powerups_fuelregen)
        def.spawnflags |= ITEM_FLAG_MUTATORBLOCKED;
}
#endif

CLASS(JetpackRegen, Powerup)
#ifdef MENUQC
    METHOD(JetpackRegen, describe, string(JetpackRegen this))
    {
        TC(JetpackRegen, this);
        return _("The Fuel Regenerator powerup regenerates Fuel needed for the Jetpack until the powerup expires, "
                 "so you can continue flying around for longer"
                 "Since it is a powerup, it will drop if you die while holding it");
    }
#endif
ENDCLASS(JetpackRegen)

REGISTER_ITEM(JetpackRegen, NEW(JetpackRegen)) {
    this.m_canonical_spawnfunc = "item_fuel_regen";
#ifdef GAMEQC
	this.spawnflags             = ITEM_FLAG_NORMAL;
    this.m_model                =   MDL_JetpackRegen_ITEM;
#endif
    this.netname                =   "fuel_regen";
    this.m_name                 =   _("Fuel regenerator");
    this.m_icon                 =   "fuelregen";
    this.m_color                =   COLOR_POWERUP_JETPACKREGEN;
    this.m_waypoint             =   _("Fuel regen");
    this.m_waypointblink        =   2;
#ifdef SVQC
    this.m_botvalue             =   3000;
    this.m_itemid               =   IT_FUEL_REGEN;
    this.m_pickupevalfunc       =   ammo_pickupevalfunc;
    this.m_iteminit             =   powerup_fuelregen_init;
#endif
}

SPAWNFUNC_ITEM(item_fuel_regen, ITEM_JetpackRegen)
