#pragma once

string cache_mutatormsg;
string cache_lastmutatormsg;

// client counts for each team
//float c1, c2, c3, c4;
// # of bots on those teams
float cb1, cb2, cb3, cb4;

int redowned, blueowned, yellowowned, pinkowned;

//float audit_teams_time;

void TeamchangeFrags(entity e);

void LogTeamchange(float player_id, float team_number, float type);

void default_delayedinit(entity this);

void ActivateTeamplay();

void InitGameplayMode();

string GetClientVersionMessage(entity this);

string getwelcomemessage(entity this);

void SetPlayerColors(entity pl, float _color);

void SetPlayerTeam(entity pl, float t, float s, float noprint);

// set c1...c4 to show what teams are allowed
void CheckAllowedTeams (entity for_whom);

float PlayerValue(entity p);

// c1...c4 should be set to -1 (not allowed) or 0 (allowed).
// teams that are allowed will now have their player counts stored in c1...c4
void GetTeamCounts(entity ignore);

float TeamSmallerEqThanTeam(float ta, float tb, entity e);

// returns # of smallest team (1, 2, 3, 4)
// NOTE: Assumes CheckAllowedTeams has already been called!
float FindSmallestTeam(entity pl, float ignore_pl);

int JoinBestTeam(entity this, bool only_return_best, bool forcebestteam);

//void() ctf_playerchanged;

void ShufflePlayerOutOfTeam (float source_team);
